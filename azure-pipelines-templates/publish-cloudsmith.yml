# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

# To publish builds of targets in branches other than develop
# set 'ForceUpload' variable to true on target matrix

steps:
  - task: ArchiveFiles@2
    condition: >-
      and(
        succeeded(),
        or(
          eq(variables['ForceUpload'], true),
          ne(variables['System.PullRequest.PullRequestId'], ''),
          eq(variables['Build.SourceBranchName'], 'main'),
          eq(variables['Build.Repository.Name'], 'nanoframework/nf-Community-Targets')
        )
      )
    displayName: Zip binary files (release & PR)
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)\$(TargetPublishName)'
      includeRootFolder: false
      archiveType: "zip"
      archiveFile: '$(Agent.TempDirectory)\$(TargetPublishName)-$(NBGV_SimpleVersion).$(TARGET_BUILD_COUNTER).zip'
      replaceExistingArchive: true

  - task: CopyFiles@2
    condition: >-
      and(
        succeeded(),
        or(
          eq(variables['ForceUpload'], true),
          ne(variables['System.PullRequest.PullRequestId'], ''),
          eq(variables['Build.SourceBranchName'], 'main'),
          eq(variables['Build.Repository.Name'], 'nanoframework/nf-Community-Targets')
        )
      )
    displayName: Collecting deployable artifacts (release & PR)
    inputs:
      sourceFolder: $(Agent.TempDirectory)
      Contents: |
        $(TargetPublishName)-$(NBGV_SimpleVersion).$(TARGET_BUILD_COUNTER).zip
      TargetFolder: '$(Build.ArtifactStagingDirectory)\$(TargetPublishName)'
      flattenFolders: true
      ignoreMakeDirErrors: true

  - task: ArchiveFiles@2
    condition: >-
      and(
        succeeded(),
        eq(variables['System.PullRequest.PullRequestId'], ''),
        or(
          eq(variables['ForceUpload'], true),
          startsWith(variables['Build.SourceBranchName'], 'develop')
        )
      )
    displayName: Zip binary files (preview)
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)\$(TargetPublishName)'
      includeRootFolder: false
      archiveType: "zip"
      archiveFile: '$(Agent.TempDirectory)\$(TargetPublishName)-$(NBGV_SimpleVersion)-preview.$(TARGET_BUILD_COUNTER).zip'
      replaceExistingArchive: true

  - task: CopyFiles@2
    condition: >-
      and(
        succeeded(),
        eq(variables['System.PullRequest.PullRequestId'], ''),
        or(
          eq(variables['ForceUpload'], true),
          startsWith(variables['Build.SourceBranchName'], 'develop')
        )
      )
    displayName: Collecting deployable artifacts (preview)
    inputs:
      sourceFolder: $(Agent.TempDirectory)
      Contents: |
        $(TargetPublishName)-$(NBGV_SimpleVersion)-preview.$(TARGET_BUILD_COUNTER).zip
      TargetFolder: '$(Build.ArtifactStagingDirectory)\$(TargetPublishName)'
      flattenFolders: true
      ignoreMakeDirErrors: true

  - task: PublishPipelineArtifact@1
    condition: succeeded()
    displayName: Publish deployables artifacts
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)\$(TargetPublishName)'
      artifactName: $(TargetPublishName)
      artifactType: pipeline
